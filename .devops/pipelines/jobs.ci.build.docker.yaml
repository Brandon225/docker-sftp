parameters:
  - name: pool
    type: string
    default: "<empty>"
  - name: arch
    default: "<empty>"

jobs:
  - job: build_docker_${{ parameters.arch }}
    displayName: "Docker ${{ parameters.arch }} image"
    pool:
      ${{ if eq(parameters.pool, '<empty>') }}:
        vmImage: "ubuntu-latest"
      ${{ if ne(parameters.pool, '<empty>') }}:
        name: "${{ parameters.pool }}"
      ${{ if ne(parameters.arch, '<empty>') }}:
        demands:
          - ${{ if eq(parameters.arch, 'amd64') }}:
              - Agent.OSArchitecture -equals X64
          - ${{ if eq(parameters.arch, 'arm') }}:
              - Agent.OSArchitecture -equals ARM
          - ${{ if eq(parameters.arch, 'arm64') }}:
              - Agent.OSArchitecture -equals ARM64
    variables:
      - name: Docker.Image.Architecture
        value: ${{ parameters.arch }}

    steps:
      - task: DockerInstaller@0
        displayName: "Docker install"
        inputs:
          dockerVersion: "19.03.9"

      - task: Docker@2
        displayName: "Build image"
        inputs:
          containerRegistry: "Emberstack Docker Hub"
          repository: $(imageRepository)
          Dockerfile: src/ES.SFTP.Host/Dockerfile
          command: build
          buildContext: src
          tags: "build-$(Build.BuildNumber)-$(Docker.Image.Architecture)"

      - task: Docker@2
        displayName: "Push image"
        inputs:
          containerRegistry: "Emberstack Docker Hub"
          repository: $(imageRepository)
          command: push
          tags: |
            build-$(Build.BuildNumber)-$(Docker.Image.Architecture)
